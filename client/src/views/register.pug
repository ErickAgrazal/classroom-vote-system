extends includes/base

block content
    .col-8.mt-5.offset-2
        .row
            .col-md-12.text-center
                h1 Registrate
                small
                    a(href="/") Ir al menú principal
        hr
        .row.pt-5
            form.col-8.offset-2
                h5 Descripción:
                p Este es un formulario para el registro de los potenciales votantes.
                hr
                .form-group
                    label(for='cedula') 
                        strong 
                            | Introduzca su Cédula:
                    input#cedula.form-control(type="text", name="cedula")
                .form-check
                    input.btn.btn-primary.js-btn-register.float-right(type="button", value="Enviar")


block extra_js
    script.
        (function(){
            var App = {
                init: async function(){
                    await App.bindEvents();
                },
                config: {
                    account: undefined,
                    web3: undefined,
                    contractAddress: '#{contractAddress}'
                },
                controls: {
                    swalOptions: {
                        registerSwal: {
                            title: 'Proceso de Registro',
                            text: '¿Está seguro que desea registrarse?',
                            type: 'warning',
                            confirmButtonText: 'Registrarme'
                        }
                    }
                },
                htmlElements: {
                    btnRegister: $('.js-btn-register'),
                },
                bindEvents: async function(){
                    await App.associateWeb3Provider();
                    App.htmlElements.btnRegister.on('click', App.eventListeners.onBtnRegisterClick);
                },
                associateWeb3Provider: async function(){
                    // Load WEB3
                    let accounts = undefined;
                    if (window.ethereum) { // for modern DApps browser
                        web3 = new Web3(ethereum);
                        try {
                            await ethereum.enable();
                        } catch (error) {
                            console.error(error);
                        }
                    } else if (web3) { // for old DApps browser
                        web3 = new Web3(web3.currentProvider);
                    } else {
                        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');
                    }

                    if(web3!== 'undefined'){
                        accounts = await web3.eth.getAccounts();
                    }

                    App.config.web3 = web3;
                    App.config.account = accounts[0];
                },
                eventListeners: {
                    onBtnRegisterClick: function(e){
                        Swal.fire(App.controls.swalOptions.registerSwal)
                            .then( (result) => {
                                if (result.value) App.requests.sendUserToContract();
                            });   
                    }
                },
                requests: {
                    sendUserToContract: async function(){
                        // Reload account
                        App.associateWeb3Provider();

                        // Continue
                        const contractJSON = await App.requests.fetchContract();
                        const { abi } = contractJSON;
                        const votingContract = new App.config.web3.eth.Contract(abi, App.config.contractAddress);
                        const id = App.config.web3.utils.utf8ToHex($('#cedula').val());
                        const resp = await votingContract.methods.associateUserToAddress(id).send({from: App.config.account});
                        console.log(resp);
                    },
                    fetchContract: async function(){
                        return $.ajax({
                            url: 'api/contract',
                            method: 'POST'
                        });
                    }
                },
            };
            App.init();
        })();