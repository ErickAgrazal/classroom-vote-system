# On linking service, docker will automatically add
# resolver for service name
# Use upstream to resolve the service name.
upstream backend {
  server web:3000;
}

server {
    # Production Setup
    listen 80;
    server_name vota.erickagrazal.com;
    return 301 https://$host$request_uri;
}

server {
    server_name vota.erickagrazal.com;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Logs
    access_log /logs/web.access.log;
    error_log /logs/web.error.log;

    # Budffer Sizing
    ssl_buffer_size 8k;

    # session settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE cipher suites
    ssl_dhparam /config/nginx/dhparams.pem;

    # ssl certs
    ssl_certificate /config/keys/letsencrypt/fullchain.pem;
    ssl_certificate_key /config/keys/letsencrypt/privkey.pem;

    # protocols
    ssl_protocols TLSv1.1 TLSv1.2;
    # ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    # HSTS, remove # from the line below to enable HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # DNS Resolver
    resolver 8.8.8.8 8.8.4.4;

    # Ellyptic Curve Algorithm
    ssl_ecdh_curve secp384r1;
    server_tokens off;

    # all ssl related config moved to ssl.conf
    # include /config/nginx/ssl.conf;
    
    # enable for ldap auth
    #include /config/nginx/ldap.conf;

    client_max_body_size 0;

    location /static/ {
      gzip_static on;
      expires     max;
      add_header  Cache-Control public;
      autoindex on;
      alias /staticfiles/;
    }

    location / {
      # Set these headers to let application to know that
      # request was made over HTTPS. Gunicorn by default read
      # X-Forwarded-Proto header to read the scheme
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;

      # Security headers
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-Frame-Options "DENY" always;

      # CSP
      add_header Content-Security-Policy "frame-src 'self'; default-src 'self'; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://ajax.googleapis.com; img-src 'self'; style-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://use.fontawesome.com https://fonts.googleapis.com; font-src 'self' https://maxcdn.bootstrapcdn.com https://fonts.googleapis.com https://fonts.gstatic.com; form-action 'self'; upgrade-insecure-requests;" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;

      # Forward the request to upstream(App service)
      proxy_pass http://backend;
    }
}